// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
  attributes Attribute[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  discount    Int?
  finalPrice  Float   
  image       String?
  reviews Review[]
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  attributes  ProductAttribute[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  reviews   Review[] // связь с отзывами
  role      String   @default("USER") // ← по умолчанию обычный пользователь
  createdAt DateTime @default(now())
}

model Review {
  id        String   @id @default(cuid())
  rating    Int    
  comment   String
  createdAt DateTime @default(now())

  // связи
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  product   Product  @relation(fields: [productId], references: [id])
  productId String
}


model Attribute {
  id         Int       @id @default(autoincrement())
  name       String
  label      String
  type       String
  unit       String?
  categoryId Int
  category   Category   @relation(fields: [categoryId], references: [id])
  productAttributes ProductAttribute[]
}

model ProductAttribute {
  id           Int         @id @default(autoincrement())
  product      Product     @relation(fields: [productId], references: [id])
  productId    Int
  attribute    Attribute   @relation(fields: [attributeId], references: [id])
  attributeId  Int
  value        String      // Храним как строку всегда
}
