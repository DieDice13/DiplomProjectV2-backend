// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  products   Product[]
  attributes Attribute[]
}

model Product {
  id          Int                @id @default(autoincrement())
  name        String
  description String?
  price       Float
  discount    Int?
  finalPrice  Float
  image       String?
  reviews     Review[]
  categoryId  Int
  category    Category           @relation(fields: [categoryId], references: [id])
  attributes  ProductAttribute[]
  favorites   Favorite[] // ← обратная связь
  cartItems   CartItem[]
}

model User {
  id        String     @id @default(cuid()) // используем cuid для безопасной генерации строк
  email     String     @unique
  password  String
  name      String
  reviews   Review[]
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  favorites Favorite[] // ← обратная связь
  cartItems CartItem[]
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}

model Attribute {
  id                Int                @id @default(autoincrement())
  name              String
  label             String
  type              String
  unit              String?
  categoryId        Int
  category          Category           @relation(fields: [categoryId], references: [id])
  productAttributes ProductAttribute[]
}

model ProductAttribute {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  attributeId Int
  attribute   Attribute @relation(fields: [attributeId], references: [id])

  value String // значение всегда как строка

  @@unique([productId, attributeId])
}

model Favorite {
  id        String @id @default(cuid())
  userId    String
  productId Int

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}

model CartItem {
  id        String @id @default(cuid())
  userId    String
  productId Int
  quantity  Int    @default(1)

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}

enum Role {
  USER
  ADMIN
}
